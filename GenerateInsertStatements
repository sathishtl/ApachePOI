import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.sql.Types;
import java.text.SimpleDateFormat;

public class GenerateInsertStatements {
//    private static final String JDBC_DRIVER = "com.ibm.db2.jcc.DB2Driver";
//    private static final String JDBC_URL = "jdbc:db2://dinsjs0202.corp.myworld.org:75869/DBRT001";
//    private static String JDBC_USER = "userName";
//    private static String JDBC_PASSWD = "password#y";

    private static final SimpleDateFormat dateFormat = 
                         new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");

    public static void main(String[] args) throws Exception {

    	args = new String[3];
		args[0] = "//djaxludb1002.corp.citistreet.org:61159/DIRAT003";
		args[1] = "username";
		args[2] = "password#y";
		
		String urlPrefix = "jdbc:db2:";
		String url;
		String user;
		String password;

		url = urlPrefix + args[0];
		user = args[1];
		password = args[2];

    	String tableName ="cde_tble";
    	String fileName = "c:\\test.txt";
    	
        Connection conn = null;
        Class.forName("com.ibm.db2.jcc.DB2Driver");
		System.out.println("**** Loaded the JDBC driver");
        try {
        	conn = DriverManager.getConnection(url, user, password);
            if (tableName != null) {
                generateInsertStatements(conn, tableName);
            }
            else {
                PrintWriter p = new PrintWriter(new FileWriter("insert_all.sql"));
                p.println("spool insert_all.log");

                BufferedReader r = new BufferedReader(new FileReader(fileName));
                tableName = r.readLine();
                while (tableName != null) {
                    p.println(String.format("@%s_insert.sql", tableName));
                    generateInsertStatements(conn, tableName);
                    tableName = r.readLine();
                }
                r.close();

                p.println("spool off");
                p.close();
            }
        }
        finally {
            if (conn != null) conn.close();
        }
    }

    private static void generateInsertStatements(Connection conn, String tableName) 
                        throws Exception {
    	try {
			Statement stmt;
			ResultSet rs;
			// Commit changes manually
			conn.setAutoCommit(false);
			log("-Created a JDBC connection to the data source");

			// Create the Statement
			stmt = conn.createStatement();
			log("-Created JDBC Statement object");

			// Execute a query and generate a ResultSet instance
			rs = stmt.executeQuery("SELECT * FROM t_gw3_sys_cde_tble");
			log("-Created JDBC ResultSet object");
			
			
			log("*************************Generating Insert statements for: ************************************" + tableName);

			
			ResultSetMetaData rsmd = rs.getMetaData();
			log("Column Count: " + rsmd.getColumnCount());
			
			int numColumns = rsmd.getColumnCount();
			int[] columnTypes = new int[numColumns];
			String columnNames = "";
			for (int i = 0; i < numColumns; i++) {
			    columnTypes[i] = rsmd.getColumnType(i + 1);
			    if (i != 0) {
			        columnNames += ",";
			    }
			    columnNames += rsmd.getColumnName(i + 1);
			}
			
			log("Column Names are ---" + columnNames);

			java.util.Date d = null; 
			PrintWriter p = new PrintWriter(new FileWriter("c:\\"+ tableName + "_insert.sql"));
			log("--created Print writer");
			while (rs.next()) {
				String columnValues = "";
				for (int i = 0; i < numColumns; i++) {
					if (i != 0) {
						columnValues += ",";
					}

					switch (columnTypes[i]) {
					case Types.BIGINT:
					case Types.BIT:
					case Types.BOOLEAN:
					case Types.DECIMAL:
					case Types.DOUBLE:
					case Types.FLOAT:
					case Types.INTEGER:
					case Types.SMALLINT:
					case Types.TINYINT:
						String v = rs.getString(i + 1);
						if (v != null)
							v = v.trim();
						columnValues += v;
						break;

					case Types.DATE:
						d = rs.getDate(i + 1);
					case Types.TIME:
						if (d == null)
							d = rs.getTime(i + 1);
					case Types.TIMESTAMP:
						if (d == null)
							d = rs.getTimestamp(i + 1);

						if (d == null) {
							columnValues += "null";
						} else {
							columnValues += "TO_DATE('" + dateFormat.format(d) + "', 'YYYY/MM/DD HH24:MI:SS')";
						}
						break;

					default:
						v = rs.getString(i + 1);
						if (v != null) {
							columnValues += "'" + v.replaceAll("'", "''").trim() + "'";
						} else {
							columnValues += "null";
						}
						break;
					}
				}
				log(columnValues);
				p.println(String.format("INSERT INTO %s (%s) values (%s);", "gira."+tableName, columnNames, columnValues));
			}
			p.close();
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			conn.close();
		}
    }

    private static void log(String s) {
        System.out.println(s);
    }

    private static void usage() {
        System.out.println("java GenerateInsertStatements [username/password] tableName|-f fileName");
    }
    
    
}
